image: docker

stages:
  - build
  - test
  - release
  - deploy

services:
  - docker

variables:
  DOCKER_PUBLIC_USERNAME: openstad
  DOCKER_IMAGE_NAME: api
  K8S_DEPLOYMENT_NAME: openstad-api
  K8S_NAMESPACE: openstad
  STAGING_BRANCH: develop
  RELEASE_BRANCH: master

before_script:
  - docker info

build:
  stage: build
  when: manual
  script:
    - docker build -t ${DOCKER_PUBLIC_USERNAME}/${DOCKER_IMAGE_NAME}:${CI_JOB_ID} .

test:
  stage: test
  when: manual
  script:
    - docker run -e CI=true ${DOCKER_PUBLIC_USERNAME}/${DOCKER_IMAGE_NAME}:${CI_JOB_ID} env npm run test -- --coverage

release:
  stage: release
  when: manual
  script:
    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin;
    - docker push ${DOCKER_PUBLIC_USERNAME}/${DOCKER_IMAGE_NAME}:${CI_JOB_ID}

deploy:
  stage: deploy
  when: manual
  script:
    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin;
    - curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
    - chmod +x ./kubectl
    - sudo mv ./kubectl /usr/local/bin/kubectl
    - mkdir ${HOME}/.kube
    - echo "$KUBE_CONFIG" | base64 --decode > ${HOME}/.kube/config
    - echo "Deploying: deployment/${K8S_DEPLOYMENT_NAME}"
    - kubectl set image deployment/${K8S_DEPLOYMENT_NAME} ${K8S_DEPLOYMENT_NAME}=${DOCKER_PUBLIC_USERNAME}/${DOCKER_IMAGE_NAME}:${CI_JOB_ID} --record -n ${K8S_NAMESPACE}
    - echo "Deployed: " ${DOCKER_PUBLIC_USERNAME}/${DOCKER_IMAGE_NAME}:${CI_JOB_ID}
